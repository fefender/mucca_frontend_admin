{"ast":null,"code":"import _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AddService.jsx\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport { Header, Icon, Container, Button, Table, Label, Accordion, Grid, Segment, Transition, Form, Radio } from \"semantic-ui-react\";\nvar api = new Api();\nvar cookies = new Cookies();\nvar options = [{\n  key: \"string\",\n  text: \"string\",\n  value: \"string\"\n}, {\n  key: \"int\",\n  text: \"int\",\n  value: \"int\"\n}, {\n  key: \"boolean\",\n  text: \"boolean\",\n  value: \"boolean\"\n}];\n\nvar AddService =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddService, _Component);\n\n  function AddService() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddService)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      active0: true,\n      duration: 200,\n      value: false,\n      count: 5,\n      sName: \"\",\n      pName: \"\",\n      pType: \"\",\n      pRequired: false,\n      obj: {}\n    };\n\n    _this.handleClick0 = function (e) {\n      _this.setState({\n        active0: !_this.state.active0\n      });\n    };\n\n    _this.typeHandler = function (event, _ref) {\n      var value = _ref.value;\n\n      _this.setState({\n        pType: value\n      });\n    };\n\n    _this.propertyObj = function () {\n      var obj = {\n        required: [],\n        modelname: \"\",\n        properties: {}\n      };\n\n      _this.setState({\n        obj: obj\n      });\n    };\n\n    _this.addProperty = function (e) {\n      console.log(e);\n      var prev = _this.state.obj;\n      var sName = _this.state.sName;\n      var pName = _this.state.pName;\n      var prevReq = prev.required;\n      var prevProp = prev.properties;\n\n      if (_this.state.pRequired) {\n        prevReq.push(_this.state.pName);\n      }\n\n      if (_this.state.pName && _this.state.pType) {\n        var prp = {\n          pName: {\n            bsonType: _this.state.pType,\n            description: pName\n          }\n        };\n        prevProp.append(prp);\n      }\n\n      var newObj = {\n        required: prevReq,\n        modelname: sName,\n        properties: prevProp\n      };\n\n      _this.setState({\n        obj: newObj\n      });\n    };\n\n    _this.generateProp = function () {\n      // da utilizzare per visualizzare le proprietÃ  salvate\n      var content = [];\n      var form = React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        label: \"Property Name\",\n        placeholder: \"Property name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        fluid: true,\n        label: \"Property type\",\n        options: options,\n        placeholder: \"Property type\",\n        onChange: _this.typeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Required\"), React.createElement(Form.Field, {\n        control: Radio,\n        label: \"Yes\",\n        value: \"1\",\n        checked: _this.state.value === \"1\" // onChange={this.handleChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: Radio,\n        label: \"No\",\n        value: \"2\",\n        checked: _this.state.value === \"2\" // onChange={this.handleChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })));\n\n      for (var x = 0; x < _this.state.count; x++) {\n        content.push(form);\n        console.log(content);\n      }\n\n      return content.map(function (value, ind) {\n        return React.createElement(Segment, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, value);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddService, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Accordion, {\n        exclusive: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Accordion.Title, {\n        onClick: this.handleClick0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Add New Service\", React.createElement(Icon, {\n        name: \"angle down\",\n        flipped: this.state.active0 ? \"vertically\" : \"horizontally\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }))), React.createElement(Transition, {\n        animation: \"slide down\",\n        duration: this.state.duration,\n        visible: this.state.active0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Accordion.Content, {\n        active: this.state.active0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        label: \"Service name\",\n        placeholder: \"Service name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \" Add Properties:\"), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        label: \"Property Name\",\n        placeholder: \"Property name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        fluid: true,\n        label: \"Property type\",\n        options: options,\n        placeholder: \"Property type\",\n        onChange: this.typeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Required\"), React.createElement(Form.Field, {\n        control: Radio,\n        label: \"Yes\",\n        value: \"1\",\n        checked: this.state.value === \"1\" // onChange={this.handleChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: Radio,\n        label: \"No\",\n        value: \"2\",\n        checked: this.state.value === \"2\" // onChange={this.handleChange}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        basic: true,\n        color: \"violet\" // compact\n        ,\n        onClick: this.addProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Add\")), React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \" Properties Added:\"), this.generateProp()))))));\n    }\n  }]);\n\n  return AddService;\n}(Component);\n\nexport default AddService;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AddService.jsx"],"names":["React","Component","Cookies","Api","Header","Icon","Container","Button","Table","Label","Accordion","Grid","Segment","Transition","Form","Radio","api","cookies","options","key","text","value","AddService","state","active0","duration","count","sName","pName","pType","pRequired","obj","handleClick0","e","setState","typeHandler","event","propertyObj","required","modelname","properties","addProperty","console","log","prev","prevReq","prevProp","push","prp","bsonType","description","append","newObj","generateProp","content","form","x","map","ind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport {\n  Header,\n  Icon,\n  Container,\n  Button,\n  Table,\n  Label,\n  Accordion,\n  Grid,\n  Segment,\n  Transition,\n  Form,\n  Radio\n} from \"semantic-ui-react\";\n\nconst api = new Api();\nconst cookies = new Cookies();\n\nconst options = [\n  { key: \"string\", text: \"string\", value: \"string\" },\n  { key: \"int\", text: \"int\", value: \"int\" },\n  { key: \"boolean\", text: \"boolean\", value: \"boolean\" }\n];\n\nclass AddService extends Component {\n  state = {\n    active0: true,\n    duration: 200,\n    value: false,\n    count: 5,\n    sName: \"\",\n    pName: \"\",\n    pType: \"\",\n    pRequired: false,\n    obj: {}\n  };\n\n  //Segment Visibility Handlers\n  handleClick0 = e => {\n    this.setState({\n      active0: !this.state.active0\n    });\n  };\n\n  typeHandler = (event, { value }) => {\n    this.setState({ pType: value });\n  };\n\n  propertyObj = () => {\n    let obj = {\n      required: [],\n      modelname: \"\",\n      properties: {}\n    };\n    this.setState({ obj: obj });\n  };\n  addProperty = e => {\n    console.log(e);\n    let prev = this.state.obj;\n    let sName = this.state.sName;\n    let pName = this.state.pName;\n    let prevReq = prev.required;\n    let prevProp = prev.properties;\n    if (this.state.pRequired) {\n      prevReq.push(this.state.pName);\n    }\n    if (this.state.pName && this.state.pType) {\n      let prp = {\n        pName: {\n          bsonType: this.state.pType,\n          description: pName\n        }\n      };\n      prevProp.append(prp);\n    }\n    let newObj = {\n      required: prevReq,\n      modelname: sName,\n      properties: prevProp\n    };\n    this.setState({ obj: newObj });\n  };\n\n  generateProp = () => {\n    // da utilizzare per visualizzare le proprietÃ  salvate\n    const content = [];\n    let form = (\n      <Segment>\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            label=\"Property Name\"\n            placeholder=\"Property name\"\n            required\n          />\n          <Form.Select\n            fluid\n            label=\"Property type\"\n            options={options}\n            placeholder=\"Property type\"\n            onChange={this.typeHandler}\n          />\n        </Form.Group>\n        <Form.Group inline>\n          <label>Required</label>\n          <Form.Field\n            control={Radio}\n            label=\"Yes\"\n            value=\"1\"\n            checked={this.state.value === \"1\"}\n            // onChange={this.handleChange}\n          />\n          <Form.Field\n            control={Radio}\n            label=\"No\"\n            value=\"2\"\n            checked={this.state.value === \"2\"}\n            // onChange={this.handleChange}\n          />\n        </Form.Group>\n      </Segment>\n    );\n\n    for (let x = 0; x < this.state.count; x++) {\n      content.push(form);\n      console.log(content);\n    }\n    return content.map((value, ind) => <Segment key={ind}>{value}</Segment>);\n  };\n\n  render() {\n    return (\n      <div>\n        <Accordion exclusive={false}>\n          <Accordion.Title onClick={this.handleClick0}>\n            <Header as=\"h3\" color=\"green\">\n              Add New Service\n              <Icon\n                name=\"angle down\"\n                flipped={this.state.active0 ? \"vertically\" : \"horizontally\"}\n              />\n            </Header>\n          </Accordion.Title>\n          <Transition\n            animation=\"slide down\"\n            duration={this.state.duration}\n            visible={this.state.active0}\n          >\n            <Accordion.Content active={this.state.active0}>\n              <Segment color=\"green\">\n                <Form>\n                  <Form.Group widths=\"equal\">\n                    <Form.Input\n                      label=\"Service name\"\n                      placeholder=\"Service name\"\n                      required\n                    />\n                  </Form.Group>\n                  <Header as=\"h4\"> Add Properties:</Header>\n                  <Segment>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        label=\"Property Name\"\n                        placeholder=\"Property name\"\n                        required\n                      />\n                      <Form.Select\n                        fluid\n                        label=\"Property type\"\n                        options={options}\n                        placeholder=\"Property type\"\n                        onChange={this.typeHandler}\n                      />\n                    </Form.Group>\n                    <Form.Group inline>\n                      <label>Required</label>\n                      <Form.Field\n                        control={Radio}\n                        label=\"Yes\"\n                        value=\"1\"\n                        checked={this.state.value === \"1\"}\n                        // onChange={this.handleChange}\n                      />\n                      <Form.Field\n                        control={Radio}\n                        label=\"No\"\n                        value=\"2\"\n                        checked={this.state.value === \"2\"}\n                        // onChange={this.handleChange}\n                      />\n                    </Form.Group>\n                    <Button\n                      type=\"submit\"\n                      basic\n                      color=\"violet\"\n                      // compact\n                      onClick={this.addProperty}\n                    >\n                      Add\n                    </Button>\n                  </Segment>\n                  <Header as=\"h4\"> Properties Added:</Header>\n                  {this.generateProp()}\n                </Form>\n              </Segment>\n            </Accordion.Content>\n          </Transition>\n        </Accordion>\n      </div>\n    );\n  }\n}\n\nexport default AddService;\n"]},"metadata":{},"sourceType":"module"}