{"ast":null,"code":"import _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AppConfig.jsx\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport { Header, Icon, Container, Button, Table, Label, Grid } from \"semantic-ui-react\";\nvar api = new Api();\nvar cookies = new Cookies();\n\nvar AppConfig =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppConfig, _Component);\n\n  function AppConfig() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppConfig);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppConfig)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      environment: cookies.get(\"userEnv\"),\n      appInfo: \"\",\n      superowner: \"\",\n      core: \"\",\n      mpkg: \"\",\n      storage: \"\",\n      portList: \"\",\n      coreEventConsumer: \"\",\n      loaded: false\n    };\n\n    _this.getConfigData = function (res) {\n      if (res && res.status === 200) {\n        console.log(res.data.data);\n\n        _this.setState({\n          appInfo: res.data.data.appinfo,\n          core: res.data.data.core,\n          mpkg: res.data.data.mpkg,\n          storage: res.data.data.storage,\n          superowner: res.data.data.superowner,\n          coreEventConsumer: res.data.data.coreEventConsumer,\n          loaded: true\n        });\n      }\n    };\n\n    _this.getPortList = function (res) {\n      if (res && res.status === 200) {\n        console.log(res.data.data);\n\n        _this.setState({\n          portList: res.data.data[_this.state.environment]\n        });\n      }\n    };\n\n    _this.setCoreEventConsumer = function () {\n      var content = [];\n\n      for (var x in _this.state.coreEventConsumer) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, _this.state.coreEventConsumer[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, _this.state.portList[_this.state.coreEventConsumer[x].name]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Status\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, value);\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(AppConfig, [{\n    key: \"setAppInfo\",\n    value: function setAppInfo() {\n      console.log(this.state.appInfo);\n      return React.createElement(Table, {\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"App Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Environment\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.appInfo.name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \" \", this.state.superowner), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" \", this.state.environment))));\n    }\n  }, {\n    key: \"setCore\",\n    value: function setCore() {\n      var content = [];\n\n      for (var x in this.state.core) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, this.state.core[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, this.state.portList[this.state.core[x].name]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Status\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, value);\n      }));\n    }\n  }, {\n    key: \"setMpkg\",\n    value: function setMpkg() {\n      var content = [];\n\n      for (var x in this.state.mpkg) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, this.state.mpkg[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, this.state.portList[this.state.mpkg[x].name]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Status\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, value);\n      }));\n    }\n  }, {\n    key: \"setStorage\",\n    value: function setStorage() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"appConfig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Application Info\", \" \"), this.state.loaded && this.setAppInfo(), React.createElement(Header, {\n        as: \"h3\",\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Core Services\", \" \"), this.state.loaded && this.setCore(), React.createElement(Header, {\n        as: \"h3\",\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Core Consumers\", \" \"), this.state.loaded && this.setCoreEventConsumer(), React.createElement(Header, {\n        as: \"h3\",\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Custom Services\", \" \"), this.state.loaded && this.setMpkg());\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.state.environment !== undefined) {\n        var query = \"config\";\n        api.read(this.state.environment, query, this.getConfigData);\n        var port = \"portlist\";\n        api.read(this.state.environment, port, this.getPortList);\n      }\n    }\n  }]);\n\n  return AppConfig;\n}(Component);\n\nexport default AppConfig;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AppConfig.jsx"],"names":["React","Component","Cookies","Api","Header","Icon","Container","Button","Table","Label","Grid","api","cookies","AppConfig","state","environment","get","appInfo","superowner","core","mpkg","storage","portList","coreEventConsumer","loaded","getConfigData","res","status","console","log","data","setState","appinfo","getPortList","setCoreEventConsumer","content","x","rowTitle","name","push","map","value","ind","setAppInfo","setCore","setMpkg","undefined","query","read","port"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport {\n  Header,\n  Icon,\n  Container,\n  Button,\n  Table,\n  Label,\n  Grid\n} from \"semantic-ui-react\";\n\nconst api = new Api();\nconst cookies = new Cookies();\n\nclass AppConfig extends Component {\n  state = {\n    environment: cookies.get(\"userEnv\"),\n    appInfo: \"\",\n    superowner: \"\",\n    core: \"\",\n    mpkg: \"\",\n    storage: \"\",\n    portList: \"\",\n    coreEventConsumer: \"\",\n    loaded: false\n  };\n\n  getConfigData = res => {\n    if (res && res.status === 200) {\n      console.log(res.data.data);\n      this.setState({\n        appInfo: res.data.data.appinfo,\n        core: res.data.data.core,\n        mpkg: res.data.data.mpkg,\n        storage: res.data.data.storage,\n        superowner: res.data.data.superowner,\n        coreEventConsumer: res.data.data.coreEventConsumer,\n        loaded: true\n      });\n    }\n  };\n\n  getPortList = res => {\n    if (res && res.status === 200) {\n      console.log(res.data.data);\n      this.setState({ portList: res.data.data[this.state.environment] });\n    }\n  };\n\n  setAppInfo() {\n    console.log(this.state.appInfo);\n    return (\n      <Table color=\"violet\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>App Name</Table.HeaderCell>\n            <Table.HeaderCell>Owner</Table.HeaderCell>\n            <Table.HeaderCell>Environment</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>{this.state.appInfo.name}</Table.Cell>\n            <Table.Cell> {this.state.superowner}</Table.Cell>\n            <Table.Cell> {this.state.environment}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    );\n  }\n  setCore() {\n    const content = [];\n    for (let x in this.state.core) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{this.state.core[x].name}</Table.Cell>\n          <Table.Cell>\n            {this.state.portList[this.state.core[x].name]}\n          </Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table color=\"teal\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  }\n  setMpkg() {\n    const content = [];\n    for (let x in this.state.mpkg) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{this.state.mpkg[x].name}</Table.Cell>\n          <Table.Cell>\n            {this.state.portList[this.state.mpkg[x].name]}\n          </Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table color=\"orange\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  }\n\n  setCoreEventConsumer = () => {\n    const content = [];\n    for (let x in this.state.coreEventConsumer) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{this.state.coreEventConsumer[x].name}</Table.Cell>\n          <Table.Cell>\n            {this.state.portList[this.state.coreEventConsumer[x].name]}\n          </Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table color=\"purple\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  };\n\n  setStorage() {}\n\n  render() {\n    return (\n      <div className=\"appConfig\">\n        <Header as=\"h3\" color=\"violet\">\n          Application Info{\" \"}\n        </Header>\n        {this.state.loaded && this.setAppInfo()}\n        <Header as=\"h3\" color=\"teal\">\n          Core Services{\" \"}\n        </Header>\n        {this.state.loaded && this.setCore()}\n        <Header as=\"h3\" color=\"purple\">\n          Core Consumers{\" \"}\n        </Header>\n        {this.state.loaded && this.setCoreEventConsumer()}\n        <Header as=\"h3\" color=\"orange\">\n          Custom Services{\" \"}\n        </Header>\n        {this.state.loaded && this.setMpkg()}\n      </div>\n    );\n  }\n  componentWillMount() {\n    if (this.state.environment !== undefined) {\n      let query = \"config\";\n      api.read(this.state.environment, query, this.getConfigData);\n      let port = \"portlist\";\n      api.read(this.state.environment, port, this.getPortList);\n    }\n  }\n}\n\nexport default AppConfig;\n"]},"metadata":{},"sourceType":"module"}