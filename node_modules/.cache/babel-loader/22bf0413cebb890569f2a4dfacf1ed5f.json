{"ast":null,"code":"import _defineProperty from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AddService.jsx\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport { Header, Icon, Container, Button, Table, Label, Accordion, Grid, Segment, Transition, Form, Radio, Card } from \"semantic-ui-react\";\nvar api = new Api();\nvar cookies = new Cookies();\nvar options = [{\n  key: \"string\",\n  text: \"string\",\n  value: \"string\"\n}, {\n  key: \"int\",\n  text: \"int\",\n  value: \"int\"\n}, {\n  key: \"boolean\",\n  text: \"boolean\",\n  value: \"boolean\"\n}];\n\nvar AddService =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddService, _Component);\n\n  function AddService() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddService);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddService)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      active0: true,\n      duration: 200,\n      count: 0,\n      sName: \"\",\n      sOwner: \"\",\n      pName: \"\",\n      pType: \"\",\n      value: \"3\",\n      valueOw: \"3\",\n      pRequired: false,\n      obj: {},\n      userEnv: cookies.get(\"userEnv\")\n    };\n\n    _this.handleClick0 = function (e) {\n      _this.setState({\n        active0: !_this.state.active0\n      });\n    };\n\n    _this.typeHandler = function (event, _ref) {\n      var value = _ref.value;\n      console.log(\"TYPE\", value);\n\n      _this.setState({\n        pType: value\n      });\n    };\n\n    _this.handleChange = function (e, _ref2) {\n      var name = _ref2.name,\n          value = _ref2.value;\n      console.log(\"HANDLE CHANGE\", name, value);\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleReq = function (e, _ref3) {\n      var value = _ref3.value;\n      console.log(\"REQ\", value);\n\n      _this.setState({\n        value: value\n      });\n\n      if (value === \"1\") {\n        _this.setState({\n          pRequired: true\n        });\n\n        console.log(\"VALUE IS 1\");\n      } else {\n        _this.setState({\n          pRequired: false\n        });\n\n        console.log(\"VALUE IS 2\");\n      }\n    };\n\n    _this.handleOwn = function (e, _ref4) {\n      var value = _ref4.value;\n      console.log(\"REQ\", value);\n\n      _this.setState({\n        valueOw: value\n      });\n\n      if (value === \"0\") {\n        _this.setState({\n          sOwner: \"0\"\n        });\n\n        console.log(\"OWNER VALUE IS 0\");\n      } else {\n        _this.setState({\n          sOwner: \"\"\n        });\n\n        console.log(\"OWNER VALUE IS 1\");\n      }\n    };\n\n    _this.propertyObj = function () {\n      var obj = {\n        required: [],\n        modelname: \"\",\n        properties: {}\n      };\n\n      _this.setState({\n        obj: obj\n      });\n    };\n\n    _this.addProperty = function (e) {\n      var prev = _this.state.obj;\n      var sName = _this.state.sName;\n      var pName = _this.state.pName;\n      var prevReq = prev.required;\n      var prevProp = prev.properties;\n\n      if (_this.state.pRequired) {\n        prevReq.push(_this.state.pName);\n      }\n\n      if (_this.state.pName && _this.state.pType) {\n        var uno = {\n          bsonType: _this.state.pType,\n          description: pName\n        };\n\n        var prp = _defineProperty({}, pName, uno);\n\n        Object.assign(prevProp, prp);\n      }\n\n      var newObj = {\n        required: prevReq,\n        modelname: sName,\n        properties: prevProp\n      };\n\n      _this.setState({\n        obj: newObj,\n        pName: \"\",\n        pType: \"\",\n        value: \"3\",\n        pRequired: false,\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.checkArray = function (val) {\n      for (var x in _this.state.obj.required) {\n        if (val === _this.state.obj.required[x]) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    _this.generateProp = function () {\n      var content = [];\n      var obj = _this.state.obj;\n      var name = \"\";\n      var type = \"\";\n      var required = false;\n      var count = 0;\n      console.log(\"***\", obj.properties);\n\n      for (var x in obj.properties) {\n        required = _this.checkArray(obj.properties[x].description);\n        var form = React.createElement(Container, {\n          fluid: true,\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(Header, {\n          as: \"h4\",\n          color: \"red\",\n          className: \"servTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"folder open\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }), x), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Name: \"), obj.properties[x].description), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \"Type: \"), obj.properties[x].bsonType), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \"Required: \"), required ? \"Yes\" : \"No\"));\n        content.push(form);\n        count++;\n      }\n\n      return content.map(function (value, ind) {\n        return React.createElement(Card, {\n          fluid: true,\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, value);\n      });\n    };\n\n    _this.submitModel = function () {\n      // let env = Promise.resolve(cookies.get(\"userEnv\")).then(\n      api.create(_this.state.userEnv, \"model\", _this.state.sName, _this.state.obj, _this.createResponse); // );\n    };\n\n    _this.createResponse = function (res) {\n      if (res && res.status === 201) {\n        console.log(res.status);\n\n        _this.updateConfig();\n      }\n    };\n\n    _this.updateConfig = function () {\n      var config = {\n        datamodel: true,\n        ownerfilter: \"1\",\n        modelname: _this.state.sName\n      };\n      api.create(_this.state.userEnv, \"config\", \"mpkg\", config, _this.configResponse);\n    };\n\n    _this.configResponse = function (res) {\n      if (res && res.status === 201) {\n        console.log(res.status);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddService, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Accordion, {\n        exclusive: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Accordion.Title, {\n        onClick: this.handleClick0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Add New Service\", React.createElement(Icon, {\n        name: \"angle down\",\n        flipped: this.state.active0 ? \"vertically\" : \"horizontally\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))), React.createElement(Transition, {\n        animation: \"slide down\",\n        duration: this.state.duration,\n        visible: this.state.active0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Accordion.Content, {\n        active: this.state.active0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        label: \"Service name\",\n        placeholder: \"Service name\",\n        name: \"sName\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"Service Visibility\"), React.createElement(Form.Field, {\n        control: Radio,\n        label: \"Public\",\n        value: \"0\",\n        checked: this.state.valueOw === \"0\",\n        onChange: this.handleReq,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: Radio,\n        label: \"Owner Only\",\n        value: \"1\",\n        checked: this.state.valueOw === \"1\",\n        onChange: this.handleOwn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })), React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \" Add Properties:\"), React.createElement(Segment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        widths: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        label: \"Property Name\",\n        placeholder: \"Property name\",\n        name: \"pName\",\n        value: this.state.pName,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(Form.Select, {\n        fluid: true,\n        label: \"Property type\",\n        options: options,\n        value: this.state.pType,\n        placeholder: \"Property type\",\n        onChange: this.typeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Required\"), React.createElement(Form.Field, {\n        control: Radio,\n        label: \"Yes\",\n        value: \"1\",\n        checked: this.state.value === \"1\",\n        onChange: this.handleReq,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        control: Radio,\n        label: \"No\",\n        value: \"2\",\n        checked: this.state.value === \"2\",\n        onChange: this.handleReq,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        basic: true,\n        color: \"violet\" // compact\n        ,\n        onClick: this.addProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Add\")), React.createElement(Header, {\n        as: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \" Properties Added:\"), React.createElement(Segment, {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(Card.Group, {\n        itemsPerRow: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, this.generateProp(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), this.state.count > 0 && React.createElement(Button, {\n        type: \"submit\",\n        basic: true,\n        fluid: true,\n        color: \"violet\" // compact\n        ,\n        onClick: this.submitModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \"Create MicroService\"))))))));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(\"will mount\");\n      this.propertyObj();\n    }\n  }]);\n\n  return AddService;\n}(Component);\n\nexport default AddService;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AddService.jsx"],"names":["React","Component","Cookies","Api","Header","Icon","Container","Button","Table","Label","Accordion","Grid","Segment","Transition","Form","Radio","Card","api","cookies","options","key","text","value","AddService","state","active0","duration","count","sName","sOwner","pName","pType","valueOw","pRequired","obj","userEnv","get","handleClick0","e","setState","typeHandler","event","console","log","handleChange","name","handleReq","handleOwn","propertyObj","required","modelname","properties","addProperty","prev","prevReq","prevProp","push","uno","bsonType","description","prp","Object","assign","newObj","checkArray","val","x","generateProp","content","type","form","map","ind","submitModel","create","createResponse","res","status","updateConfig","config","datamodel","ownerfilter","configResponse"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport {\n  Header,\n  Icon,\n  Container,\n  Button,\n  Table,\n  Label,\n  Accordion,\n  Grid,\n  Segment,\n  Transition,\n  Form,\n  Radio,\n  Card\n} from \"semantic-ui-react\";\n\nconst api = new Api();\nconst cookies = new Cookies();\n\nconst options = [\n  { key: \"string\", text: \"string\", value: \"string\" },\n  { key: \"int\", text: \"int\", value: \"int\" },\n  { key: \"boolean\", text: \"boolean\", value: \"boolean\" }\n];\n\nclass AddService extends Component {\n  state = {\n    active0: true,\n    duration: 200,\n    count: 0,\n    sName: \"\",\n    sOwner: \"\",\n    pName: \"\",\n    pType: \"\",\n    value: \"3\",\n    valueOw: \"3\",\n    pRequired: false,\n    obj: {},\n    userEnv: cookies.get(\"userEnv\")\n  };\n\n  //Segment Visibility Handlers\n  handleClick0 = e => {\n    this.setState({\n      active0: !this.state.active0\n    });\n  };\n  //inputs hanlders\n  typeHandler = (event, { value }) => {\n    console.log(\"TYPE\", value);\n    this.setState({ pType: value });\n  };\n\n  handleChange = (e, { name, value }) => {\n    console.log(\"HANDLE CHANGE\", name, value);\n    this.setState({ [name]: value });\n  };\n\n  handleReq = (e, { value }) => {\n    console.log(\"REQ\", value);\n    this.setState({ value: value });\n    if (value === \"1\") {\n      this.setState({ pRequired: true });\n      console.log(\"VALUE IS 1\");\n    } else {\n      this.setState({ pRequired: false });\n      console.log(\"VALUE IS 2\");\n    }\n  };\n\n  handleOwn = (e, { value }) => {\n    console.log(\"REQ\", value);\n    this.setState({ valueOw: value });\n    if (value === \"0\") {\n      this.setState({ sOwner: \"0\" });\n      console.log(\"OWNER VALUE IS 0\");\n    } else {\n      this.setState({ sOwner: \"\" });\n      console.log(\"OWNER VALUE IS 1\");\n    }\n  };\n\n  propertyObj = () => {\n    let obj = {\n      required: [],\n      modelname: \"\",\n      properties: {}\n    };\n    this.setState({ obj: obj });\n  };\n  addProperty = e => {\n    let prev = this.state.obj;\n    let sName = this.state.sName;\n    let pName = this.state.pName;\n    let prevReq = prev.required;\n    let prevProp = prev.properties;\n    if (this.state.pRequired) {\n      prevReq.push(this.state.pName);\n    }\n    if (this.state.pName && this.state.pType) {\n      let uno = {\n        bsonType: this.state.pType,\n        description: pName\n      };\n      let prp = { [pName]: uno };\n      Object.assign(prevProp, prp);\n    }\n    let newObj = {\n      required: prevReq,\n      modelname: sName,\n      properties: prevProp\n    };\n    this.setState({\n      obj: newObj,\n      pName: \"\",\n      pType: \"\",\n      value: \"3\",\n      pRequired: false,\n      count: this.state.count + 1\n    });\n  };\n\n  checkArray = val => {\n    for (let x in this.state.obj.required) {\n      if (val === this.state.obj.required[x]) {\n        return true;\n      }\n    }\n    return false;\n  };\n  generateProp = () => {\n    const content = [];\n    let obj = this.state.obj;\n    let name = \"\";\n    let type = \"\";\n    let required = false;\n    let count = 0;\n    console.log(\"***\", obj.properties);\n    for (let x in obj.properties) {\n      required = this.checkArray(obj.properties[x].description);\n\n      let form = (\n        <Container fluid color=\"red\">\n          {/* <br /> */}\n          <Header as=\"h4\" color=\"red\" className=\"servTitle\">\n            <Icon name=\"folder open\" />\n            {x}\n          </Header>\n          <p>\n            {\" \"}\n            <strong>Name: </strong>\n            {obj.properties[x].description}\n          </p>\n          <p>\n            {\" \"}\n            <strong>Type: </strong>\n            {obj.properties[x].bsonType}\n          </p>\n          <p>\n            {\" \"}\n            <strong>Required: </strong>\n            {required ? \"Yes\" : \"No\"}\n          </p>\n        </Container>\n      );\n      content.push(form);\n      count++;\n    }\n    return content.map((value, ind) => (\n      <Card fluid key={ind}>\n        {value}\n      </Card>\n    ));\n  };\n\n  submitModel = () => {\n    // let env = Promise.resolve(cookies.get(\"userEnv\")).then(\n    api.create(\n      this.state.userEnv,\n      \"model\",\n      this.state.sName,\n      this.state.obj,\n      this.createResponse\n    );\n    // );\n  };\n\n  createResponse = res => {\n    if (res && res.status === 201) {\n      console.log(res.status);\n      this.updateConfig();\n    }\n  };\n\n  updateConfig = () => {\n    let config = {\n      datamodel: true,\n      ownerfilter: \"1\",\n      modelname: this.state.sName\n    };\n    api.create(\n      this.state.userEnv,\n      \"config\",\n      \"mpkg\",\n      config,\n      this.configResponse\n    );\n  };\n\n  configResponse = res => {\n    if (res && res.status === 201) {\n      console.log(res.status);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Accordion exclusive={false}>\n          <Accordion.Title onClick={this.handleClick0}>\n            <Header as=\"h3\" color=\"green\">\n              Add New Service\n              <Icon\n                name=\"angle down\"\n                flipped={this.state.active0 ? \"vertically\" : \"horizontally\"}\n              />\n            </Header>\n          </Accordion.Title>\n          <Transition\n            animation=\"slide down\"\n            duration={this.state.duration}\n            visible={this.state.active0}\n          >\n            <Accordion.Content active={this.state.active0}>\n              <Segment color=\"green\">\n                <Form>\n                  <Form.Group widths=\"equal\">\n                    <Form.Input\n                      label=\"Service name\"\n                      placeholder=\"Service name\"\n                      name=\"sName\"\n                      onChange={this.handleChange}\n                      required\n                    />\n                  </Form.Group>\n                  <Form.Group inline>\n                    <label>Service Visibility</label>\n                    <Form.Field\n                      control={Radio}\n                      label=\"Public\"\n                      value=\"0\"\n                      checked={this.state.valueOw === \"0\"}\n                      onChange={this.handleReq}\n                    />\n                    <Form.Field\n                      control={Radio}\n                      label=\"Owner Only\"\n                      value=\"1\"\n                      checked={this.state.valueOw === \"1\"}\n                      onChange={this.handleOwn}\n                    />\n                  </Form.Group>\n                  <Header as=\"h4\"> Add Properties:</Header>\n                  <Segment>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        label=\"Property Name\"\n                        placeholder=\"Property name\"\n                        name=\"pName\"\n                        value={this.state.pName}\n                        onChange={this.handleChange}\n                        required\n                      />\n                      <Form.Select\n                        fluid\n                        label=\"Property type\"\n                        options={options}\n                        value={this.state.pType}\n                        placeholder=\"Property type\"\n                        onChange={this.typeHandler}\n                      />\n                    </Form.Group>\n                    <Form.Group inline>\n                      <label>Required</label>\n                      <Form.Field\n                        control={Radio}\n                        label=\"Yes\"\n                        value=\"1\"\n                        checked={this.state.value === \"1\"}\n                        onChange={this.handleReq}\n                      />\n                      <Form.Field\n                        control={Radio}\n                        label=\"No\"\n                        value=\"2\"\n                        checked={this.state.value === \"2\"}\n                        onChange={this.handleReq}\n                      />\n                    </Form.Group>\n                    <Button\n                      type=\"submit\"\n                      basic\n                      color=\"violet\"\n                      // compact\n                      onClick={this.addProperty}\n                    >\n                      Add\n                    </Button>\n                  </Segment>\n                  <Header as=\"h4\"> Properties Added:</Header>\n                  <Segment color=\"red\">\n                    <Card.Group itemsPerRow={3}>\n                      {this.generateProp()}\n                      <br />\n                    </Card.Group>\n                    <br />\n                    {this.state.count > 0 && (\n                      <Button\n                        type=\"submit\"\n                        basic\n                        fluid\n                        color=\"violet\"\n                        // compact\n                        onClick={this.submitModel}\n                      >\n                        Create MicroService\n                      </Button>\n                    )}\n                  </Segment>\n                </Form>\n              </Segment>\n            </Accordion.Content>\n          </Transition>\n        </Accordion>\n      </div>\n    );\n  }\n  componentWillMount() {\n    console.log(\"will mount\");\n    this.propertyObj();\n  }\n}\n\nexport default AddService;\n"]},"metadata":{},"sourceType":"module"}