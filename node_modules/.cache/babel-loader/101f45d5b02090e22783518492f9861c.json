{"ast":null,"code":"import _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Dashboard/Dashboard.jsx\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport { Header, Grid, Icon, Container, Button, Input } from \"semantic-ui-react\";\nimport Cookies from \"universal-cookie\";\nimport Login from \"../Login/Login\";\nimport LeftMenu from \"../Components/Sections/LeftMenu\";\nimport HomeView from \"../Components/Views/HomeView\"; // import VideoView from \"../components/views/Video/Video\";\n// import PlaylistView from \"../components/views/Playlist/Playlist\";\n// import PublishersView from \"../components/views/Publishers/Publishers\";\n\nimport SettingsView from \"../Components/Views/SettingsView\"; // import SingleView from \"../components/views/Single/Single\";\n// import NotFoundView from \"../components/views/NotFound/NotFound\";\n// import UserController from \"../components/widgets/userController\";\n\nimport TopControl from \"../Components/Sections/TopControl\";\nimport \"./dashboard.css\";\nvar cookies = new Cookies();\nvar login = new Login();\nexport var Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loginstatus: false\n    };\n\n    _this.setAuthorization = function (auth) {\n      if (auth === false) {\n        // console.log(\"NON autorizzato\", auth);\n        _this.setState({\n          loginstatus: auth,\n          loading: false\n        });\n      } else {\n        console.log(\"autorizzato\", auth); // this.setState({ loginstatus: auth, loading: false });\n      }\n\n      _this.setState({\n        loginstatus: auth,\n        loading: false\n      });\n    };\n\n    _this.renderDashboard = function () {\n      return _this.state.loginstatus && React.createElement(\"div\", {\n        className: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(LeftMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(TopControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"dashboard-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        columns: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: HomeView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/settings\",\n        render: SettingsView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (typeof cookies.get(\"userToken\") != \"undefined\" && cookies.get(\"userToken\")) {\n        if (typeof cookies.get(\"userKey\") != \"undefined\" && cookies.get(\"userKey\")) {\n          login.authorization(cookies.get(\"userToken\"), cookies.get(\"userKey\"), this.setAuthorization);\n        }\n      } else {\n        console.log(\"start FAKE authorization\");\n        login.authorization(\"noToken\", \"noKey\", this.setAuthorization);\n      }\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\nexport default Dashboard;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Dashboard/Dashboard.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Link","Switch","Header","Grid","Icon","Container","Button","Input","Cookies","Login","LeftMenu","HomeView","SettingsView","TopControl","cookies","login","Dashboard","state","loginstatus","setAuthorization","auth","setState","loading","console","log","renderDashboard","get","authorization"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport {\n  Header,\n  Grid,\n  Icon,\n  Container,\n  Button,\n  Input\n} from \"semantic-ui-react\";\nimport Cookies from \"universal-cookie\";\nimport Login from \"../Login/Login\";\nimport LeftMenu from \"../Components/Sections/LeftMenu\";\nimport HomeView from \"../Components/Views/HomeView\";\n// import VideoView from \"../components/views/Video/Video\";\n// import PlaylistView from \"../components/views/Playlist/Playlist\";\n// import PublishersView from \"../components/views/Publishers/Publishers\";\nimport SettingsView from \"../Components/Views/SettingsView\";\n// import SingleView from \"../components/views/Single/Single\";\n// import NotFoundView from \"../components/views/NotFound/NotFound\";\n// import UserController from \"../components/widgets/userController\";\nimport TopControl from \"../Components/Sections/TopControl\";\nimport \"./dashboard.css\";\n\nconst cookies = new Cookies();\nconst login = new Login();\n\nexport class Dashboard extends Component {\n  state = {\n    loginstatus: false\n  };\n\n  setAuthorization = auth => {\n    if (auth === false) {\n      // console.log(\"NON autorizzato\", auth);\n      this.setState({ loginstatus: auth, loading: false });\n    } else {\n      console.log(\"autorizzato\", auth);\n      // this.setState({ loginstatus: auth, loading: false });\n    }\n    this.setState({ loginstatus: auth, loading: false });\n  };\n\n  renderDashboard = () => {\n    return (\n      this.state.loginstatus && (\n        <div className=\"dashboard\">\n          <LeftMenu />\n          <TopControl />\n          <div className=\"dashboard-content\">\n            <Grid container columns=\"equal\">\n              {/* <Grid.Column floated=\"left\">\n              <LeftMenu />\n            </Grid.Column> */}\n              <Grid.Column>\n                <Switch>\n                  <Route path=\"/\" exact render={HomeView} />\n                  {/* <Route path=\"/video\" render={VideoView} />\n              <Route path=\"/playlists\" render={PlaylistView} />\n              <Route path=\"/publishers\" render={PublishersView} /> */}\n                  <Route path=\"/settings\" render={SettingsView} />\n                  {/* <Route path=\"/player/:type/:id\" render={SingleView} />\n              <Route path=\"/logout\" render={LogoutView} />\n              <Route render={NotFoundView} /> */}\n                </Switch>\n              </Grid.Column>\n            </Grid>\n          </div>\n        </div>\n      )\n    );\n  };\n  componentWillMount() {\n    if (\n      typeof cookies.get(\"userToken\") != \"undefined\" &&\n      cookies.get(\"userToken\")\n    ) {\n      if (\n        typeof cookies.get(\"userKey\") != \"undefined\" &&\n        cookies.get(\"userKey\")\n      ) {\n        login.authorization(\n          cookies.get(\"userToken\"),\n          cookies.get(\"userKey\"),\n          this.setAuthorization\n        );\n      }\n    } else {\n      console.log(\"start FAKE authorization\");\n      login.authorization(\"noToken\", \"noKey\", this.setAuthorization);\n    }\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}