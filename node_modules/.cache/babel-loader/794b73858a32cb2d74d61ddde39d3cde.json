{"ast":null,"code":"import _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AppConfig.jsx\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport { Header, Icon, Container, Button, Table, Label, Accordion, Grid } from \"semantic-ui-react\";\nvar api = new Api();\nvar cookies = new Cookies();\n\nvar AppConfig =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppConfig, _Component);\n\n  function AppConfig() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppConfig);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppConfig)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      environment: cookies.get(\"userEnv\"),\n      appInfo: \"\",\n      superowner: \"\",\n      core: \"\",\n      mpkg: \"\",\n      storage: \"\",\n      portList: \"\",\n      coreEventConsumer: \"\",\n      mpkgEventConsumer: \"\",\n      loaded: false,\n      activeIndex: 0\n    };\n\n    _this.handleClick = function (e, titleProps) {\n      var index = titleProps.index;\n      var activeIndex = _this.state.activeIndex;\n      var newIndex = activeIndex === index ? -1 : index;\n\n      _this.setState({\n        activeIndex: newIndex\n      });\n    };\n\n    _this.getConfigData = function (res) {\n      if (res && res.status === 200) {\n        _this.setState({\n          appInfo: res.data.data.appinfo,\n          core: res.data.data.core,\n          mpkg: res.data.data.mpkg,\n          storage: res.data.data.storage,\n          superowner: res.data.data.superowner,\n          coreEventConsumer: res.data.data.coreEventConsumer,\n          mpkgEventConsumer: res.data.data.mpkgEventConsumer,\n          loaded: true\n        });\n      }\n    };\n\n    _this.getPortList = function (res) {\n      if (res && res.status === 200) {\n        _this.setState({\n          portList: res.data.data[_this.state.environment]\n        });\n      }\n    };\n\n    _this.setCoreEventConsumer = function () {\n      var content = [];\n\n      for (var x in _this.state.coreEventConsumer) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, _this.state.coreEventConsumer[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, _this.state.portList[_this.state.coreEventConsumer[x].name]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Status\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, value);\n      }));\n    };\n\n    _this.setMpkgEventConsumer = function () {\n      var content = [];\n\n      for (var x in _this.state.mpkgEventConsumer) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, _this.state.mpkgEventConsumer[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, _this.state.portList[_this.state.mpkgEventConsumer[x].name]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Status\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, value);\n      }));\n    };\n\n    _this.genericSetter = function (data) {\n      var content = [];\n\n      for (var x in data) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, data[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, _this.state.portList[data[x].name]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Status\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, value);\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(AppConfig, [{\n    key: \"setAppInfo\",\n    value: function setAppInfo() {\n      return React.createElement(Table, {\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"App Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Environment\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.appInfo.name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" \", this.state.superowner), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" \", this.state.environment))));\n    }\n  }, {\n    key: \"setCore\",\n    value: function setCore() {\n      var content = [];\n\n      for (var x in this.state.core) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, this.state.core[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, this.state.portList[this.state.core[x].name]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Status\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, value);\n      }));\n    }\n  }, {\n    key: \"setMpkg\",\n    value: function setMpkg() {\n      var content = [];\n\n      for (var x in this.state.mpkg) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, this.state.mpkg[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, this.state.portList[this.state.mpkg[x].name]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Status\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, value);\n      }));\n    }\n  }, {\n    key: \"setStorage\",\n    value: function setStorage() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var activeIndex = this.state.activeIndex;\n      return React.createElement(\"div\", {\n        className: \"appConfig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Accordion, {\n        exclusive: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Accordion.Title, {\n        active: activeIndex === 0,\n        index: 0,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Application Info\")), React.createElement(Accordion.Content, {\n        active: activeIndex === 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, this.state.loaded && this.setAppInfo()), React.createElement(Accordion.Title, {\n        active: activeIndex === 1,\n        index: 1,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Core Services\")), React.createElement(Accordion.Content, {\n        active: activeIndex === 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, this.state.loaded && this.setCore()), React.createElement(Accordion.Title, {\n        active: activeIndex === 2,\n        index: 2,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Core Consumers\")), React.createElement(Accordion.Content, {\n        active: activeIndex === 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, this.state.loaded && this.setCoreEventConsumer()), React.createElement(Accordion.Title, {\n        active: activeIndex === 3,\n        index: 3,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Custom Services\")), React.createElement(Accordion.Content, {\n        active: activeIndex === 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, this.state.loaded && this.setMpkg()), React.createElement(Accordion.Title, {\n        active: activeIndex === 4,\n        index: 4,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Custom Consumers\")), React.createElement(Accordion.Content, {\n        active: activeIndex === 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, this.state.loaded && this.setMpkgEventConsumer())));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.state.environment !== undefined) {\n        var query = \"config\";\n        api.read(this.state.environment, query, this.getConfigData);\n        var port = \"portlist\";\n        api.read(this.state.environment, port, this.getPortList);\n      }\n    }\n  }]);\n\n  return AppConfig;\n}(Component);\n\nexport default AppConfig;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AppConfig.jsx"],"names":["React","Component","Cookies","Api","Header","Icon","Container","Button","Table","Label","Accordion","Grid","api","cookies","AppConfig","state","environment","get","appInfo","superowner","core","mpkg","storage","portList","coreEventConsumer","mpkgEventConsumer","loaded","activeIndex","handleClick","e","titleProps","index","newIndex","setState","getConfigData","res","status","data","appinfo","getPortList","setCoreEventConsumer","content","x","rowTitle","name","push","map","value","ind","setMpkgEventConsumer","genericSetter","setAppInfo","setCore","setMpkg","undefined","query","read","port"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,SAPF,EAQEC,IARF,QASO,mBATP;AAWA,IAAMC,GAAG,GAAG,IAAIT,GAAJ,EAAZ;AACA,IAAMU,OAAO,GAAG,IAAIX,OAAJ,EAAhB;;IAEMY,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAEH,OAAO,CAACI,GAAR,CAAY,SAAZ,CADP;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,IAAI,EAAE,EALA;AAMNC,MAAAA,OAAO,EAAE,EANH;AAONC,MAAAA,QAAQ,EAAE,EAPJ;AAQNC,MAAAA,iBAAiB,EAAE,EARb;AASNC,MAAAA,iBAAiB,EAAE,EATb;AAUNC,MAAAA,MAAM,EAAE,KAVF;AAWNC,MAAAA,WAAW,EAAE;AAXP,K;;UAcRC,W,GAAc,UAACC,CAAD,EAAIC,UAAJ,EAAmB;AAAA,UACvBC,KADuB,GACbD,UADa,CACvBC,KADuB;AAAA,UAEvBJ,WAFuB,GAEP,MAAKZ,KAFE,CAEvBY,WAFuB;AAG/B,UAAMK,QAAQ,GAAGL,WAAW,KAAKI,KAAhB,GAAwB,CAAC,CAAzB,GAA6BA,KAA9C;;AAEA,YAAKE,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEK;AAAf,OAAd;AACD,K;;UAEDE,a,GAAgB,UAAAC,GAAG,EAAI;AACrB,UAAIA,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAA1B,EAA+B;AAC7B,cAAKH,QAAL,CAAc;AACZf,UAAAA,OAAO,EAAEiB,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,OADX;AAEZlB,UAAAA,IAAI,EAAEe,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcjB,IAFR;AAGZC,UAAAA,IAAI,EAAEc,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAchB,IAHR;AAIZC,UAAAA,OAAO,EAAEa,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcf,OAJX;AAKZH,UAAAA,UAAU,EAAEgB,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAclB,UALd;AAMZK,UAAAA,iBAAiB,EAAEW,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcb,iBANrB;AAOZC,UAAAA,iBAAiB,EAAEU,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcZ,iBAPrB;AAQZC,UAAAA,MAAM,EAAE;AARI,SAAd;AAUD;AACF,K;;UAEDa,W,GAAc,UAAAJ,GAAG,EAAI;AACnB,UAAIA,GAAG,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAA1B,EAA+B;AAC7B,cAAKH,QAAL,CAAc;AAAEV,UAAAA,QAAQ,EAAEY,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAc,MAAKtB,KAAL,CAAWC,WAAzB;AAAZ,SAAd;AACD;AACF,K;;UAsFDwB,oB,GAAuB,YAAM;AAC3B,UAAMC,OAAO,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAT,IAAc,MAAK3B,KAAL,CAAWS,iBAAzB,EAA4C;AAC1C,YAAImB,QAAQ,GACV,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAa,MAAK5B,KAAL,CAAWS,iBAAX,CAA6BkB,CAA7B,EAAgCE,IAA7C,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAK7B,KAAL,CAAWQ,QAAX,CAAoB,MAAKR,KAAL,CAAWS,iBAAX,CAA6BkB,CAA7B,EAAgCE,IAApD,CADH,CAFF,EAKE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CADF;AAWAH,QAAAA,OAAO,CAACI,IAAR,CAAaF,QAAb;AACD;;AACD,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,EAQGF,OAAO,CAACK,GAAR,CAAY,UAACC,KAAD,EAAQC,GAAR;AAAA,eACX,oBAAC,KAAD,CAAO,IAAP;AAAY,UAAA,GAAG,EAAEA,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBD,KAAvB,CADW;AAAA,OAAZ,CARH,CADF;AAcD,K;;UAEDE,oB,GAAuB,YAAM;AAC3B,UAAMR,OAAO,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAT,IAAc,MAAK3B,KAAL,CAAWU,iBAAzB,EAA4C;AAC1C,YAAIkB,QAAQ,GACV,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAa,MAAK5B,KAAL,CAAWU,iBAAX,CAA6BiB,CAA7B,EAAgCE,IAA7C,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,MAAK7B,KAAL,CAAWQ,QAAX,CAAoB,MAAKR,KAAL,CAAWU,iBAAX,CAA6BiB,CAA7B,EAAgCE,IAApD,CADH,CAFF,EAKE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CADF;AAWAH,QAAAA,OAAO,CAACI,IAAR,CAAaF,QAAb;AACD;;AACD,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,EAQGF,OAAO,CAACK,GAAR,CAAY,UAACC,KAAD,EAAQC,GAAR;AAAA,eACX,oBAAC,KAAD,CAAO,IAAP;AAAY,UAAA,GAAG,EAAEA,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBD,KAAvB,CADW;AAAA,OAAZ,CARH,CADF;AAcD,K;;UAIDG,a,GAAgB,UAAAb,IAAI,EAAI;AACtB,UAAMI,OAAO,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAT,IAAcL,IAAd,EAAoB;AAClB,YAAIM,QAAQ,GACV,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaN,IAAI,CAACK,CAAD,CAAJ,CAAQE,IAArB,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAa,MAAK7B,KAAL,CAAWQ,QAAX,CAAoBc,IAAI,CAACK,CAAD,CAAJ,CAAQE,IAA5B,CAAb,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAHF,CADF;AASAH,QAAAA,OAAO,CAACI,IAAR,CAAaF,QAAb;AACD;;AACD,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,EAQGF,OAAO,CAACK,GAAR,CAAY,UAACC,KAAD,EAAQC,GAAR;AAAA,eACX,oBAAC,KAAD,CAAO,IAAP;AAAY,UAAA,GAAG,EAAEA,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBD,KAAvB,CADW;AAAA,OAAZ,CARH,CADF;AAcD,K;;;;;;;iCAlLY;AACX,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADF,CADF,EASE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAa,KAAKhC,KAAL,CAAWG,OAAX,CAAmB0B,IAAhC,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAc,KAAK7B,KAAL,CAAWI,UAAzB,CAFF,EAGE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAc,KAAKJ,KAAL,CAAWC,WAAzB,CAHF,CADF,CATF,CADF;AAmBD;;;8BACS;AACR,UAAMyB,OAAO,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAT,IAAc,KAAK3B,KAAL,CAAWK,IAAzB,EAA+B;AAC7B,YAAIuB,QAAQ,GACV,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAa,KAAK5B,KAAL,CAAWK,IAAX,CAAgBsB,CAAhB,EAAmBE,IAAhC,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK7B,KAAL,CAAWQ,QAAX,CAAoB,KAAKR,KAAL,CAAWK,IAAX,CAAgBsB,CAAhB,EAAmBE,IAAvC,CADH,CAFF,EAKE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CADF;AAWAH,QAAAA,OAAO,CAACI,IAAR,CAAaF,QAAb;AACD;;AACD,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,EAQGF,OAAO,CAACK,GAAR,CAAY,UAACC,KAAD,EAAQC,GAAR;AAAA,eACX,oBAAC,KAAD,CAAO,IAAP;AAAY,UAAA,GAAG,EAAEA,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBD,KAAvB,CADW;AAAA,OAAZ,CARH,CADF;AAcD;;;8BACS;AACR,UAAMN,OAAO,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAT,IAAc,KAAK3B,KAAL,CAAWM,IAAzB,EAA+B;AAC7B,YAAIsB,QAAQ,GACV,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAa,KAAK5B,KAAL,CAAWM,IAAX,CAAgBqB,CAAhB,EAAmBE,IAAhC,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK7B,KAAL,CAAWQ,QAAX,CAAoB,KAAKR,KAAL,CAAWM,IAAX,CAAgBqB,CAAhB,EAAmBE,IAAvC,CADH,CAFF,EAKE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CALF,CADF;AAWAH,QAAAA,OAAO,CAACI,IAAR,CAAaF,QAAb;AACD;;AACD,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,EAQGF,OAAO,CAACK,GAAR,CAAY,UAACC,KAAD,EAAQC,GAAR;AAAA,eACX,oBAAC,KAAD,CAAO,IAAP;AAAY,UAAA,GAAG,EAAEA,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBD,KAAvB,CADW;AAAA,OAAZ,CARH,CADF;AAcD;;;iCAkEY,CAAE;;;6BAgCN;AAAA,UACCpB,WADD,GACiB,KAAKZ,KADtB,CACCY,WADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,CAAW,KAAX;AACE,QAAA,MAAM,EAAEA,WAAW,KAAK,CAD1B;AAEE,QAAA,KAAK,EAAE,CAFT;AAGE,QAAA,OAAO,EAAE,KAAKC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,CADF,EAUE,oBAAC,SAAD,CAAW,OAAX;AAAmB,QAAA,MAAM,EAAED,WAAW,KAAK,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWW,MAAX,IAAqB,KAAKyB,UAAL,EADxB,CAVF,EAaE,oBAAC,SAAD,CAAW,KAAX;AACE,QAAA,MAAM,EAAExB,WAAW,KAAK,CAD1B;AAEE,QAAA,KAAK,EAAE,CAFT;AAGE,QAAA,OAAO,EAAE,KAAKC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,CAbF,EAsBE,oBAAC,SAAD,CAAW,OAAX;AAAmB,QAAA,MAAM,EAAED,WAAW,KAAK,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWW,MAAX,IAAqB,KAAK0B,OAAL,EADxB,CAtBF,EAyBE,oBAAC,SAAD,CAAW,KAAX;AACE,QAAA,MAAM,EAAEzB,WAAW,KAAK,CAD1B;AAEE,QAAA,KAAK,EAAE,CAFT;AAGE,QAAA,OAAO,EAAE,KAAKC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,CAzBF,EAkCE,oBAAC,SAAD,CAAW,OAAX;AAAmB,QAAA,MAAM,EAAED,WAAW,KAAK,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWW,MAAX,IAAqB,KAAKc,oBAAL,EADxB,CAlCF,EAqCE,oBAAC,SAAD,CAAW,KAAX;AACE,QAAA,MAAM,EAAEb,WAAW,KAAK,CAD1B;AAEE,QAAA,KAAK,EAAE,CAFT;AAGE,QAAA,OAAO,EAAE,KAAKC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALF,CArCF,EA8CE,oBAAC,SAAD,CAAW,OAAX;AAAmB,QAAA,MAAM,EAAED,WAAW,KAAK,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWW,MAAX,IAAqB,KAAK2B,OAAL,EADxB,CA9CF,EAiDE,oBAAC,SAAD,CAAW,KAAX;AACE,QAAA,MAAM,EAAE1B,WAAW,KAAK,CAD1B;AAEE,QAAA,KAAK,EAAE,CAFT;AAGE,QAAA,OAAO,EAAE,KAAKC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,CAjDF,EA0DE,oBAAC,SAAD,CAAW,OAAX;AAAmB,QAAA,MAAM,EAAED,WAAW,KAAK,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWW,MAAX,IAAqB,KAAKuB,oBAAL,EADxB,CA1DF,CADF,CADF;AAsFD;;;yCACoB;AACnB,UAAI,KAAKlC,KAAL,CAAWC,WAAX,KAA2BsC,SAA/B,EAA0C;AACxC,YAAIC,KAAK,GAAG,QAAZ;AACA3C,QAAAA,GAAG,CAAC4C,IAAJ,CAAS,KAAKzC,KAAL,CAAWC,WAApB,EAAiCuC,KAAjC,EAAwC,KAAKrB,aAA7C;AACA,YAAIuB,IAAI,GAAG,UAAX;AACA7C,QAAAA,GAAG,CAAC4C,IAAJ,CAAS,KAAKzC,KAAL,CAAWC,WAApB,EAAiCyC,IAAjC,EAAuC,KAAKlB,WAA5C;AACD;AACF;;;;EAhUqBtC,S;;AAmUxB,eAAea,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport {\n  Header,\n  Icon,\n  Container,\n  Button,\n  Table,\n  Label,\n  Accordion,\n  Grid\n} from \"semantic-ui-react\";\n\nconst api = new Api();\nconst cookies = new Cookies();\n\nclass AppConfig extends Component {\n  state = {\n    environment: cookies.get(\"userEnv\"),\n    appInfo: \"\",\n    superowner: \"\",\n    core: \"\",\n    mpkg: \"\",\n    storage: \"\",\n    portList: \"\",\n    coreEventConsumer: \"\",\n    mpkgEventConsumer: \"\",\n    loaded: false,\n    activeIndex: 0\n  };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  getConfigData = res => {\n    if (res && res.status === 200) {\n      this.setState({\n        appInfo: res.data.data.appinfo,\n        core: res.data.data.core,\n        mpkg: res.data.data.mpkg,\n        storage: res.data.data.storage,\n        superowner: res.data.data.superowner,\n        coreEventConsumer: res.data.data.coreEventConsumer,\n        mpkgEventConsumer: res.data.data.mpkgEventConsumer,\n        loaded: true\n      });\n    }\n  };\n\n  getPortList = res => {\n    if (res && res.status === 200) {\n      this.setState({ portList: res.data.data[this.state.environment] });\n    }\n  };\n\n  setAppInfo() {\n    return (\n      <Table color=\"violet\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>App Name</Table.HeaderCell>\n            <Table.HeaderCell>Owner</Table.HeaderCell>\n            <Table.HeaderCell>Environment</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>{this.state.appInfo.name}</Table.Cell>\n            <Table.Cell> {this.state.superowner}</Table.Cell>\n            <Table.Cell> {this.state.environment}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    );\n  }\n  setCore() {\n    const content = [];\n    for (let x in this.state.core) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{this.state.core[x].name}</Table.Cell>\n          <Table.Cell>\n            {this.state.portList[this.state.core[x].name]}\n          </Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table color=\"teal\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  }\n  setMpkg() {\n    const content = [];\n    for (let x in this.state.mpkg) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{this.state.mpkg[x].name}</Table.Cell>\n          <Table.Cell>\n            {this.state.portList[this.state.mpkg[x].name]}\n          </Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table color=\"purple\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  }\n\n  setCoreEventConsumer = () => {\n    const content = [];\n    for (let x in this.state.coreEventConsumer) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{this.state.coreEventConsumer[x].name}</Table.Cell>\n          <Table.Cell>\n            {this.state.portList[this.state.coreEventConsumer[x].name]}\n          </Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table color=\"orange\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  };\n\n  setMpkgEventConsumer = () => {\n    const content = [];\n    for (let x in this.state.mpkgEventConsumer) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{this.state.mpkgEventConsumer[x].name}</Table.Cell>\n          <Table.Cell>\n            {this.state.portList[this.state.mpkgEventConsumer[x].name]}\n          </Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table color=\"olive\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  };\n\n  setStorage() {}\n\n  genericSetter = data => {\n    const content = [];\n    for (let x in data) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{data[x].name}</Table.Cell>\n          <Table.Cell>{this.state.portList[data[x].name]}</Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table color=\"black\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  };\n\n  render() {\n    const { activeIndex } = this.state;\n    return (\n      <div className=\"appConfig\">\n        <Accordion exclusive={false}>\n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={this.handleClick}\n          >\n            <Header as=\"h3\" color=\"violet\">\n              Application Info\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            {this.state.loaded && this.setAppInfo()}\n          </Accordion.Content>\n          <Accordion.Title\n            active={activeIndex === 1}\n            index={1}\n            onClick={this.handleClick}\n          >\n            <Header as=\"h3\" color=\"teal\">\n              Core Services\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1}>\n            {this.state.loaded && this.setCore()}\n          </Accordion.Content>\n          <Accordion.Title\n            active={activeIndex === 2}\n            index={2}\n            onClick={this.handleClick}\n          >\n            <Header as=\"h3\" color=\"orange\">\n              Core Consumers\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 2}>\n            {this.state.loaded && this.setCoreEventConsumer()}\n          </Accordion.Content>\n          <Accordion.Title\n            active={activeIndex === 3}\n            index={3}\n            onClick={this.handleClick}\n          >\n            <Header as=\"h3\" color=\"purple\">\n              Custom Services\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 3}>\n            {this.state.loaded && this.setMpkg()}\n          </Accordion.Content>\n          <Accordion.Title\n            active={activeIndex === 4}\n            index={4}\n            onClick={this.handleClick}\n          >\n            <Header as=\"h3\" color=\"olive\">\n              Custom Consumers\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 4}>\n            {this.state.loaded && this.setMpkgEventConsumer()}\n          </Accordion.Content>\n        </Accordion>\n        {/* <Header as=\"h3\" color=\"violet\">\n          Application Info\n        </Header>\n        {this.state.loaded && this.setAppInfo()}\n        <Header as=\"h3\" color=\"teal\">\n          Core Services\n        </Header>\n        {this.state.loaded && this.setCore()} \n        <Header as=\"h3\" color=\"orange\">\n          Core Consumers\n        </Header>\n        {this.state.loaded && this.setCoreEventConsumer()}\n        <Header as=\"h3\" color=\"purple\">\n          Custom Services\n        </Header>\n        {this.state.loaded && this.setMpkg()}\n        <Header as=\"h3\" color=\"olive\">\n          Custom Consumers\n        </Header>\n        {this.state.loaded && this.setMpkgEventConsumer()} */}\n      </div>\n    );\n  }\n  componentWillMount() {\n    if (this.state.environment !== undefined) {\n      let query = \"config\";\n      api.read(this.state.environment, query, this.getConfigData);\n      let port = \"portlist\";\n      api.read(this.state.environment, port, this.getPortList);\n    }\n  }\n}\n\nexport default AppConfig;\n"]},"metadata":{},"sourceType":"module"}