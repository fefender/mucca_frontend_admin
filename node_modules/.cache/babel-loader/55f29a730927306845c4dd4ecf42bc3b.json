{"ast":null,"code":"import _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AppConfig.jsx\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport { Header, Icon, Container, Button, Table, Label, Accordion, Grid, Segment } from \"semantic-ui-react\";\nvar api = new Api();\nvar cookies = new Cookies();\n\nvar AppConfig =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppConfig, _Component);\n\n  function AppConfig() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppConfig);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppConfig)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      environment: cookies.get(\"userEnv\"),\n      appInfo: \"\",\n      superowner: \"\",\n      core: \"\",\n      mpkg: \"\",\n      storage: \"\",\n      portList: \"\",\n      coreEventConsumer: \"\",\n      mpkgEventConsumer: \"\",\n      loaded: false,\n      active0: true,\n      active1: false,\n      active2: false,\n      active3: false,\n      active4: false,\n      active5: false\n    };\n\n    _this.handleClick0 = function (e) {\n      _this.setState({\n        active0: !_this.state.active0\n      });\n    };\n\n    _this.handleClick1 = function (e) {\n      _this.setState({\n        active1: !_this.state.active1\n      });\n    };\n\n    _this.handleClick2 = function (e) {\n      _this.setState({\n        active2: !_this.state.active2\n      });\n    };\n\n    _this.handleClick3 = function (e) {\n      _this.setState({\n        active3: !_this.state.active3\n      });\n    };\n\n    _this.handleClick4 = function (e) {\n      _this.setState({\n        active4: !_this.state.active4\n      });\n    };\n\n    _this.handleClick5 = function (e) {\n      _this.setState({\n        active5: !_this.state.active5\n      });\n    };\n\n    _this.getConfigData = function (res) {\n      console.log(res.data);\n\n      if (res && res.status === 200) {\n        _this.setState({\n          appInfo: res.data.data.appinfo,\n          core: res.data.data.core,\n          mpkg: res.data.data.mpkg,\n          storage: res.data.data.storage,\n          superowner: res.data.data.superowner,\n          coreEventConsumer: res.data.data.coreEventConsumer,\n          mpkgEventConsumer: res.data.data.mpkgEventConsumer,\n          loaded: true\n        });\n      }\n    };\n\n    _this.getPortList = function (res) {\n      if (res && res.status === 200) {\n        _this.setState({\n          portList: res.data.data[_this.state.environment]\n        });\n      }\n    };\n\n    _this.genericSetter = function (data) {\n      var content = [];\n\n      for (var x in data) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, data[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, _this.state.portList[data[x].name]), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Status\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, value);\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(AppConfig, [{\n    key: \"setAppInfo\",\n    //Data Setters\n    value: function setAppInfo() {\n      return React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"App Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Environment\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.appInfo.name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" \", this.state.superowner), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" \", this.state.environment))));\n    }\n  }, {\n    key: \"setStorage\",\n    value: function setStorage() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"appConfig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Accordion, {\n        exclusive: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Accordion.Title, {\n        onClick: this.handleClick0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Application Info\")), React.createElement(Accordion.Content, {\n        active: this.state.active0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.state.loaded && this.setAppInfo())), React.createElement(Accordion.Title, {\n        onClick: this.handleClick1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Core Services\")), React.createElement(Accordion.Content, {\n        active: this.state.active1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.core))), React.createElement(Accordion.Title, {\n        onClick: this.handleClick2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Core Consumers\")), React.createElement(Accordion.Content, {\n        active: this.state.active2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.coreEventConsumer))), React.createElement(Accordion.Title, {\n        onClick: this.handleClick3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Custom Services\")), React.createElement(Accordion.Content, {\n        active: this.state.active3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        color: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.mpkg))), React.createElement(Accordion.Title, {\n        onClick: this.handleClick4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Custom Consumers\")), React.createElement(Accordion.Content, {\n        active: this.state.active4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.mpkgEventConsumer))), React.createElement(Accordion.Title, {\n        onClick: this.handleClick5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Storage\")), React.createElement(Accordion.Content, {\n        active: this.state.active5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.storage)))));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.state.environment !== undefined) {\n        var query = \"config\";\n        api.read(this.state.environment, query, this.getConfigData);\n        var port = \"portlist\";\n        api.read(this.state.environment, port, this.getPortList);\n      }\n    }\n  }]);\n\n  return AppConfig;\n}(Component);\n\nexport default AppConfig;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AppConfig.jsx"],"names":["React","Component","Cookies","Api","Header","Icon","Container","Button","Table","Label","Accordion","Grid","Segment","api","cookies","AppConfig","state","environment","get","appInfo","superowner","core","mpkg","storage","portList","coreEventConsumer","mpkgEventConsumer","loaded","active0","active1","active2","active3","active4","active5","handleClick0","e","setState","handleClick1","handleClick2","handleClick3","handleClick4","handleClick5","getConfigData","res","console","log","data","status","appinfo","getPortList","genericSetter","content","x","rowTitle","name","push","map","value","ind","setAppInfo","undefined","query","read","port"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport {\n  Header,\n  Icon,\n  Container,\n  Button,\n  Table,\n  Label,\n  Accordion,\n  Grid,\n  Segment\n} from \"semantic-ui-react\";\n\nconst api = new Api();\nconst cookies = new Cookies();\n\nclass AppConfig extends Component {\n  state = {\n    environment: cookies.get(\"userEnv\"),\n    appInfo: \"\",\n    superowner: \"\",\n    core: \"\",\n    mpkg: \"\",\n    storage: \"\",\n    portList: \"\",\n    coreEventConsumer: \"\",\n    mpkgEventConsumer: \"\",\n    loaded: false,\n    active0: true,\n    active1: false,\n    active2: false,\n    active3: false,\n    active4: false,\n    active5: false\n  };\n\n  //Segment Visibility Handlers\n  handleClick0 = e => {\n    this.setState({ active0: !this.state.active0 });\n  };\n  handleClick1 = e => {\n    this.setState({ active1: !this.state.active1 });\n  };\n  handleClick2 = e => {\n    this.setState({ active2: !this.state.active2 });\n  };\n  handleClick3 = e => {\n    this.setState({ active3: !this.state.active3 });\n  };\n  handleClick4 = e => {\n    this.setState({ active4: !this.state.active4 });\n  };\n  handleClick5 = e => {\n    this.setState({ active5: !this.state.active5 });\n  };\n\n  //Data getters\n  getConfigData = res => {\n    console.log(res.data);\n    if (res && res.status === 200) {\n      this.setState({\n        appInfo: res.data.data.appinfo,\n        core: res.data.data.core,\n        mpkg: res.data.data.mpkg,\n        storage: res.data.data.storage,\n        superowner: res.data.data.superowner,\n        coreEventConsumer: res.data.data.coreEventConsumer,\n        mpkgEventConsumer: res.data.data.mpkgEventConsumer,\n        loaded: true\n      });\n    }\n  };\n  getPortList = res => {\n    if (res && res.status === 200) {\n      this.setState({ portList: res.data.data[this.state.environment] });\n    }\n  };\n\n  //Data Setters\n  setAppInfo() {\n    return (\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>App Name</Table.HeaderCell>\n            <Table.HeaderCell>Owner</Table.HeaderCell>\n            <Table.HeaderCell>Environment</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>{this.state.appInfo.name}</Table.Cell>\n            <Table.Cell> {this.state.superowner}</Table.Cell>\n            <Table.Cell> {this.state.environment}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  setStorage() {}\n\n  genericSetter = data => {\n    const content = [];\n    for (let x in data) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{data[x].name}</Table.Cell>\n          <Table.Cell>{this.state.portList[data[x].name]}</Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"appConfig\">\n        <Accordion exclusive={false}>\n          <Accordion.Title onClick={this.handleClick0}>\n            <Header as=\"h3\" color=\"violet\">\n              Application Info\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={this.state.active0}>\n            <Segment color=\"blue\">\n              {this.state.loaded && this.setAppInfo()}\n            </Segment>\n          </Accordion.Content>\n          <Accordion.Title onClick={this.handleClick1}>\n            <Header as=\"h3\" color=\"violet\">\n              Core Services\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={this.state.active1}>\n            <Segment color=\"purple\">\n              {this.state.loaded && this.genericSetter(this.state.core)}\n            </Segment>\n          </Accordion.Content>\n          <Accordion.Title onClick={this.handleClick2}>\n            <Header as=\"h3\" color=\"orange\">\n              Core Consumers\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={this.state.active2}>\n            <Segment color=\"orange\">\n              {this.state.loaded &&\n                this.genericSetter(this.state.coreEventConsumer)}\n            </Segment>\n          </Accordion.Content>\n          <Accordion.Title onClick={this.handleClick3}>\n            <Header as=\"h3\" color=\"purple\">\n              Custom Services\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={this.state.active3}>\n            <Segment color=\"purple\">\n              {this.state.loaded && this.genericSetter(this.state.mpkg)}\n            </Segment>\n          </Accordion.Content>\n          <Accordion.Title onClick={this.handleClick4}>\n            <Header as=\"h3\" color=\"olive\">\n              Custom Consumers\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={this.state.active4}>\n            <Segment color=\"olive\">\n              {this.state.loaded &&\n                this.genericSetter(this.state.mpkgEventConsumer)}\n            </Segment>\n          </Accordion.Content>\n          <Accordion.Title onClick={this.handleClick5}>\n            <Header as=\"h3\" color=\"green\">\n              Storage\n            </Header>\n          </Accordion.Title>\n          <Accordion.Content active={this.state.active5}>\n            <Segment color=\"green\">\n              {this.state.loaded && this.genericSetter(this.state.storage)}\n            </Segment>\n          </Accordion.Content>\n        </Accordion>\n      </div>\n    );\n  }\n  componentWillMount() {\n    if (this.state.environment !== undefined) {\n      let query = \"config\";\n      api.read(this.state.environment, query, this.getConfigData);\n      let port = \"portlist\";\n      api.read(this.state.environment, port, this.getPortList);\n    }\n  }\n}\n\nexport default AppConfig;\n"]},"metadata":{},"sourceType":"module"}