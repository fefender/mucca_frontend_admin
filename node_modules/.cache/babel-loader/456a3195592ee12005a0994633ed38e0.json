{"ast":null,"code":"import _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AllStatusViewer.jsx\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport { Header, Icon, Container, Button, Modal, Label, Accordion, Grid, Segment, Transition, Form, Radio, Card, Table } from \"semantic-ui-react\";\nimport ServiceHandler from \"../Sections/ServiceHandler\";\nvar api = new Api();\nvar cookies = new Cookies();\n\nvar AllStatusViewer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllStatusViewer, _Component);\n\n  function AllStatusViewer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AllStatusViewer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AllStatusViewer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      group: _this.props.group,\n      environment: cookies.get(\"userEnv\"),\n      core: \"\",\n      coreEventConsumer: \"\",\n      mpkg: \"\",\n      dependencies: \"\",\n      reverseproxy: \"\",\n      storage: \"\",\n      loaded: false\n    };\n\n    _this.triggerResponse = function (res) {\n      console.log(res);\n\n      if (res && res.status === 200) {\n        _this.setState({\n          core: res.data.data.core,\n          coreEventConsumer: res.data.data.coreEventConsumer,\n          mpkg: res.data.data.mpkg,\n          dependencies: res.data.data.dependencies,\n          reverseproxy: res.data.data.reverseproxy,\n          storage: res.data.data.storage,\n          loaded: true\n        });\n      }\n    };\n\n    _this.genericSetter = function (data, group) {\n      var content = [];\n\n      for (var x in data) {\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          className: \"servName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, data[x].name)), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, data[x].status), React.createElement(Table.Cell, {\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(ServiceHandler, {\n          sName: data[x].name,\n          sGroup: group,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        selectable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Group name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \" \"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \" Handlers\")), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \" \" + group), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" \"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \", React.createElement(ServiceHandler, {\n        sName: group,\n        sGroup: group,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))), React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Table.HeaderCell, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Handlers\"))), content.map(function (value, ind) {\n        return React.createElement(Table.Body, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, value);\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(AllStatusViewer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"violet\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Application Status\"), React.createElement(Segment, {\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: \"equal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h4\",\n        color: \"violet\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Core\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Segment.Group, {\n        horizontal: true,\n        size: \"mini\",\n        compact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        color: \"violet\",\n        inverted: true,\n        padded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"span\",\n        textAlign: \"center\",\n        className: \"servGrTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Start, Stop or Build all Services in Core Group\")), React.createElement(Segment, {\n        color: \"violet\",\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ServiceHandler, {\n        sName: \"core\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.core, \"core\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.coreEventConsumer, \"coreEventConsumer\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.dependencies, \"dependencies\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.reverseproxy, \"reverseproxy\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.storage, \"storage\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h4\",\n        color: \"red\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Custom\"))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.state.loaded && this.genericSetter(this.state.mpkg, \"mpkg\"))))));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      api.trigger(this.state.environment, \"status\", this.triggerResponse);\n    }\n  }]);\n\n  return AllStatusViewer;\n}(Component);\n\nexport default AllStatusViewer;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AllStatusViewer.jsx"],"names":["React","Component","Cookies","Api","Header","Icon","Container","Button","Modal","Label","Accordion","Grid","Segment","Transition","Form","Radio","Card","Table","ServiceHandler","api","cookies","AllStatusViewer","state","group","props","environment","get","core","coreEventConsumer","mpkg","dependencies","reverseproxy","storage","loaded","triggerResponse","res","console","log","status","setState","data","genericSetter","content","x","rowTitle","name","push","map","value","ind","trigger"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport {\n  Header,\n  Icon,\n  Container,\n  Button,\n  Modal,\n  Label,\n  Accordion,\n  Grid,\n  Segment,\n  Transition,\n  Form,\n  Radio,\n  Card,\n  Table\n} from \"semantic-ui-react\";\nimport ServiceHandler from \"../Sections/ServiceHandler\";\n\nconst api = new Api();\nconst cookies = new Cookies();\n\nclass AllStatusViewer extends Component {\n  state = {\n    group: this.props.group,\n    environment: cookies.get(\"userEnv\"),\n    core: \"\",\n    coreEventConsumer: \"\",\n    mpkg: \"\",\n    dependencies: \"\",\n    reverseproxy: \"\",\n    storage: \"\",\n    loaded: false\n  };\n\n  triggerResponse = res => {\n    console.log(res);\n    if (res && res.status === 200) {\n      this.setState({\n        core: res.data.data.core,\n        coreEventConsumer: res.data.data.coreEventConsumer,\n        mpkg: res.data.data.mpkg,\n        dependencies: res.data.data.dependencies,\n        reverseproxy: res.data.data.reverseproxy,\n        storage: res.data.data.storage,\n        loaded: true\n      });\n    }\n  };\n\n  genericSetter = (data, group) => {\n    const content = [];\n    for (let x in data) {\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>\n            <strong className=\"servName\">{data[x].name}</strong>\n          </Table.Cell>\n          <Table.Cell>{data[x].status}</Table.Cell>\n          <Table.Cell textAlign=\"center\">\n            <ServiceHandler sName={data[x].name} sGroup={group} />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table selectable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Group name</Table.HeaderCell>\n            <Table.HeaderCell> </Table.HeaderCell>\n            <Table.HeaderCell> Handlers</Table.HeaderCell>\n          </Table.Row>\n          <Table.Row>\n            <Table.HeaderCell>{\" \" + group}</Table.HeaderCell>\n            <Table.HeaderCell> </Table.HeaderCell>\n            <Table.HeaderCell>\n              {\" \"}\n              <ServiceHandler sName={group} sGroup={group} />\n            </Table.HeaderCell>\n          </Table.Row>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n            <Table.HeaderCell textAlign=\"center\">Handlers</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {content.map((value, ind) => (\n          <Table.Body key={ind}>{value}</Table.Body>\n        ))}\n      </Table>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h3\" color=\"violet\" textAlign=\"center\">\n          Application Status\n        </Header>\n        <Segment color=\"violet\">\n          <Grid columns=\"equal\">\n            <Grid.Row>\n              <Grid.Column>\n                <Header as=\"h4\" color=\"violet\" textAlign=\"center\">\n                  Core\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <Segment.Group horizontal size=\"mini\" compact>\n                  <Segment color=\"violet\" inverted padded>\n                    <Header\n                      as=\"span\"\n                      textAlign=\"center\"\n                      className=\"servGrTitle\"\n                    >\n                      Start, Stop or Build all Services in Core Group\n                    </Header>\n                  </Segment>\n                  <Segment color=\"violet\" inverted>\n                    <ServiceHandler sName=\"core\" />\n                  </Segment>\n                </Segment.Group>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                {this.state.loaded &&\n                  this.genericSetter(this.state.core, \"core\")}\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                {this.state.loaded &&\n                  this.genericSetter(\n                    this.state.coreEventConsumer,\n                    \"coreEventConsumer\"\n                  )}\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                {this.state.loaded &&\n                  this.genericSetter(this.state.dependencies, \"dependencies\")}\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                {this.state.loaded &&\n                  this.genericSetter(this.state.reverseproxy, \"reverseproxy\")}\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                {this.state.loaded &&\n                  this.genericSetter(this.state.storage, \"storage\")}\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <Header as=\"h4\" color=\"red\" textAlign=\"center\">\n                  Custom\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                {this.state.loaded &&\n                  this.genericSetter(this.state.mpkg, \"mpkg\")}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </div>\n    );\n  }\n  componentWillMount() {\n    api.trigger(this.state.environment, \"status\", this.triggerResponse);\n  }\n}\n\nexport default AllStatusViewer;\n"]},"metadata":{},"sourceType":"module"}