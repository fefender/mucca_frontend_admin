{"ast":null,"code":"import _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/TopControl.jsx\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { Modal, Input, Button, Icon, Grid, Container, Select, Header } from \"semantic-ui-react\";\nimport LoginView from \"../../Login/LoginView\";\nvar cookies = new Cookies();\nvar options = [{\n  key: \"develop\",\n  text: \"develop\",\n  value: \"develop\"\n}, {\n  key: \"production\",\n  text: \"production\",\n  value: \"production\"\n}, {\n  key: \"stage\",\n  text: \"stage\",\n  value: \"stage\"\n}];\n\nvar TopControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TopControl, _Component);\n\n  function TopControl() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TopControl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TopControl)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      environment: cookies.get(\"userEnv\"),\n      modalOpen: false\n    };\n\n    _this.envHandler = function (event, _ref) {\n      var value = _ref.value;\n\n      _this.setState({\n        environment: value\n      });\n    };\n\n    _this.changeEnv = function (e) {\n      cookies.remove(\"userEnv\");\n      cookies.set(\"userEnv\", _this.state.environment);\n      return window.location.reload();\n    };\n\n    _this.handleOpen = function () {\n      return _this.setState({\n        modalOpen: true\n      });\n    };\n\n    _this.handleClose = function () {\n      return _this.setState({\n        modalOpen: false\n      });\n    };\n\n    _this.checkStatus = function (res) {\n      if (res) {\n        _this.changeEnv();\n      } else {\n        console.log(\"login failed\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TopControl, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"topcontrol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        floated: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button.Group, {\n        icon: true,\n        compact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        inverted: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btnlabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Start \"), React.createElement(Icon, {\n        name: \"play\",\n        circular: true,\n        color: \"violet\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"buttondivider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Button, {\n        inverted: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btnlabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Stop \"), React.createElement(Icon, {\n        name: \"pause\",\n        circular: true,\n        color: \"violet\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))), React.createElement(Select, {\n        floated: \"right\",\n        size: \"mini\",\n        options: options,\n        defaultValue: this.state.environment,\n        onChange: this.envHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"spazio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        basic: true,\n        color: \"violet\" // compact\n        // onClick={this.changeEnv}\n        ,\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"ok\")), React.createElement(Grid.Column, {\n        floated: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })))), React.createElement(Modal // trigger={<Button onClick={this.handleOpen}>Show Modal</Button>}\n      , {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        basic: true,\n        size: \"small\",\n        dimmer: \"blurring\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(LoginView, {\n        status: this.checkStatus,\n        env: this.state.environment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"red\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"remove\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), \" Close\"))));\n    }\n  }]);\n\n  return TopControl;\n}(Component);\n\nexport default TopControl;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/TopControl.jsx"],"names":["React","Component","Cookies","Modal","Input","Button","Icon","Grid","Container","Select","Header","LoginView","cookies","options","key","text","value","TopControl","state","environment","get","modalOpen","envHandler","event","setState","changeEnv","e","remove","set","window","location","reload","handleOpen","handleClose","checkStatus","res","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport {\n  Modal,\n  Input,\n  Button,\n  Icon,\n  Grid,\n  Container,\n  Select,\n  Header\n} from \"semantic-ui-react\";\nimport LoginView from \"../../Login/LoginView\";\n\nconst cookies = new Cookies();\nconst options = [\n  { key: \"develop\", text: \"develop\", value: \"develop\" },\n  { key: \"production\", text: \"production\", value: \"production\" },\n  { key: \"stage\", text: \"stage\", value: \"stage\" }\n];\n\nclass TopControl extends Component {\n  state = {\n    environment: cookies.get(\"userEnv\"),\n    modalOpen: false\n  };\n\n  envHandler = (event, { value }) => {\n    this.setState({ environment: value });\n  };\n\n  changeEnv = e => {\n    cookies.remove(\"userEnv\");\n    cookies.set(\"userEnv\", this.state.environment);\n    return window.location.reload();\n  };\n\n  handleOpen = () => this.setState({ modalOpen: true });\n\n  handleClose = () => this.setState({ modalOpen: false });\n\n  checkStatus = res => {\n    if (res) {\n      this.changeEnv();\n    } else {\n      console.log(\"login failed\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"topcontrol\">\n        <Grid columns={3}>\n          <Grid.Row floated=\"right\">\n            <Grid.Column>\n              <Container />\n            </Grid.Column>\n            <Grid.Column>\n              <Button.Group icon compact>\n                <Button inverted size=\"small\">\n                  <span className=\"btnlabel\">Start </span>\n                  <Icon name=\"play\" circular color=\"violet\" size=\"small\" />\n                </Button>\n                <span className=\"buttondivider\" />\n                <Button inverted size=\"small\">\n                  <span className=\"btnlabel\">Stop </span>\n\n                  <Icon name=\"pause\" circular color=\"violet\" size=\"small\" />\n                </Button>\n              </Button.Group>\n              <Select\n                floated=\"right\"\n                size=\"mini\"\n                options={options}\n                defaultValue={this.state.environment}\n                onChange={this.envHandler}\n              />\n              <span className=\"spazio\" />\n              <Button\n                type=\"submit\"\n                basic\n                color=\"violet\"\n                // compact\n                // onClick={this.changeEnv}\n                onClick={this.handleOpen}\n              >\n                ok\n              </Button>\n            </Grid.Column>\n            <Grid.Column floated=\"right\">\n              <Container />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <Modal\n          // trigger={<Button onClick={this.handleOpen}>Show Modal</Button>}\n          open={this.state.modalOpen}\n          onClose={this.handleClose}\n          basic\n          size=\"small\"\n          dimmer=\"blurring\"\n        >\n          <Modal.Content>\n            <LoginView status={this.checkStatus} env={this.state.environment} />\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"red\" onClick={this.handleClose}>\n              <Icon name=\"remove\" /> Close\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default TopControl;\n"]},"metadata":{},"sourceType":"module"}