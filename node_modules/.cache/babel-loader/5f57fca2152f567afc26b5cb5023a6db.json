{"ast":null,"code":"import _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AppConfig.jsx\";\nimport React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport { Header, Icon, Container, Button, Table, Label, Grid } from \"semantic-ui-react\";\nvar api = new Api();\nvar cookies = new Cookies();\n\nvar AppConfig =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppConfig, _Component);\n\n  function AppConfig() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AppConfig);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AppConfig)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      environment: cookies.get(\"userEnv\"),\n      appInfo: \"\",\n      superowner: \"\",\n      core: \"\",\n      mpkg: \"\",\n      storage: \"\",\n      loaded: false\n    };\n\n    _this.getConfigData = function (res) {\n      if (res && res.status === 200) {\n        console.log(res.data.data);\n\n        _this.setState({\n          appInfo: res.data.data.appinfo,\n          core: res.data.data.core,\n          mpkg: res.data.data.mpkg,\n          storage: res.data.data.storage,\n          superowner: res.data.data.superowner,\n          loaded: true\n        });\n      }\n    };\n\n    _this.getPortList = function (res) {\n      if (res && res.status === 200) {\n        console.log(res.data.data);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AppConfig, [{\n    key: \"setAppInfo\",\n    value: function setAppInfo() {\n      console.log(this.state.appInfo);\n      return React.createElement(Table, {\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"App Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Owner\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Environment\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.appInfo.name), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" \", this.state.superowner), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" \", this.state.environment))));\n    }\n  }, {\n    key: \"setCore\",\n    value: function setCore() {\n      console.log(this.state.core);\n      var content = [];\n\n      for (var x in this.state.core) {\n        console.log(this.state.core[x].name);\n        var rowTitle = React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, this.state.core[x].name), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"//\"), React.createElement(Table.Cell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })));\n        content.push(rowTitle);\n      }\n\n      return React.createElement(Table, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Service Name\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Port\"), React.createElement(Table.HeaderCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Status\"))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, content.map(function (value, ind) {\n        return React.createElement(Table.Row, {\n          key: ind,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, value);\n      })));\n    }\n  }, {\n    key: \"setMpkg\",\n    value: function setMpkg() {}\n  }, {\n    key: \"setStorage\",\n    value: function setStorage() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"appConfig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h3\",\n        color: \"violet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Application Info\", \" \"), this.state.loaded && this.setAppInfo(), React.createElement(Header, {\n        as: \"h3\",\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Core Services\", \" \"), this.state.loaded && this.setCore(), React.createElement(Header, {\n        as: \"h3\",\n        color: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Core Services\", \" \"));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.state.environment !== undefined) {\n        var query = \"config\";\n        api.read(this.state.environment, query, this.getConfigData);\n        var port = \"portlist\";\n        api.read(this.state.environment, port, this.getPortList);\n      }\n    }\n  }]);\n\n  return AppConfig;\n}(Component);\n\nexport default AppConfig;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/AppConfig.jsx"],"names":["React","Component","Cookies","Api","Header","Icon","Container","Button","Table","Label","Grid","api","cookies","AppConfig","state","environment","get","appInfo","superowner","core","mpkg","storage","loaded","getConfigData","res","status","console","log","data","setState","appinfo","getPortList","name","content","x","rowTitle","push","map","value","ind","setAppInfo","setCore","undefined","query","read","port"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport Api from \"../../api\";\nimport {\n  Header,\n  Icon,\n  Container,\n  Button,\n  Table,\n  Label,\n  Grid\n} from \"semantic-ui-react\";\n\nconst api = new Api();\nconst cookies = new Cookies();\n\nclass AppConfig extends Component {\n  state = {\n    environment: cookies.get(\"userEnv\"),\n    appInfo: \"\",\n    superowner: \"\",\n    core: \"\",\n    mpkg: \"\",\n    storage: \"\",\n    loaded: false\n  };\n\n  getConfigData = res => {\n    if (res && res.status === 200) {\n      console.log(res.data.data);\n      this.setState({\n        appInfo: res.data.data.appinfo,\n        core: res.data.data.core,\n        mpkg: res.data.data.mpkg,\n        storage: res.data.data.storage,\n        superowner: res.data.data.superowner,\n        loaded: true\n      });\n    }\n  };\n\n  getPortList = res => {\n    if (res && res.status === 200) {\n      console.log(res.data.data);\n    }\n  };\n\n  setAppInfo() {\n    console.log(this.state.appInfo);\n    return (\n      <Table color=\"violet\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>App Name</Table.HeaderCell>\n            <Table.HeaderCell>Owner</Table.HeaderCell>\n            <Table.HeaderCell>Environment</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>{this.state.appInfo.name}</Table.Cell>\n            <Table.Cell> {this.state.superowner}</Table.Cell>\n            <Table.Cell> {this.state.environment}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    );\n  }\n  setCore() {\n    console.log(this.state.core);\n    const content = [];\n    for (let x in this.state.core) {\n      console.log(this.state.core[x].name);\n      let rowTitle = (\n        <Table.Row>\n          <Table.Cell>{this.state.core[x].name}</Table.Cell>\n          <Table.Cell>//</Table.Cell>\n          <Table.Cell>\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        </Table.Row>\n      );\n      content.push(rowTitle);\n    }\n    return (\n      <Table color=\"teal\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Service Name</Table.HeaderCell>\n            <Table.HeaderCell>Port</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {content.map((value, ind) => (\n            <Table.Row key={ind}>{value}</Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n  setMpkg() {}\n\n  setStorage() {}\n\n  render() {\n    return (\n      <div className=\"appConfig\">\n        <Header as=\"h3\" color=\"violet\">\n          Application Info{\" \"}\n        </Header>\n        {this.state.loaded && this.setAppInfo()}\n        <Header as=\"h3\" color=\"teal\">\n          Core Services{\" \"}\n        </Header>\n        {this.state.loaded && this.setCore()}\n        <Header as=\"h3\" color=\"orange\">\n          Core Services{\" \"}\n        </Header>\n      </div>\n    );\n  }\n  componentWillMount() {\n    if (this.state.environment !== undefined) {\n      let query = \"config\";\n      api.read(this.state.environment, query, this.getConfigData);\n      let port = \"portlist\";\n      api.read(this.state.environment, port, this.getPortList);\n    }\n  }\n}\n\nexport default AppConfig;\n"]},"metadata":{},"sourceType":"module"}