{"ast":null,"code":"import _defineProperty from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/TopControl.jsx\";\nimport React, { Component } from \"react\";\nimport { Image, Input, Button, Icon, Grid } from \"semantic-ui-react\";\n\nvar TopControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TopControl, _Component);\n\n  function TopControl() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TopControl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TopControl)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      environment: \"\"\n    };\n\n    _this.envHandler = function (event) {\n      var name = event.target.name;\n\n      _this.setState(_defineProperty({}, name, event.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(TopControl, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"topcontrol\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        columns: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        floated: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(Grid.Column, {\n        floated: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Button.Group, {\n        icon: true,\n        size: \"small\",\n        compact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Button, {\n        inverted: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btnlabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Start \"), React.createElement(Icon, {\n        name: \"play\",\n        circular: true,\n        color: \"violet\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"buttondivider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(Button, {\n        inverted: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"btnlabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Stop \"), React.createElement(Icon, {\n        name: \"pause\",\n        circular: true,\n        color: \"violet\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }))), React.createElement(Input, {\n        floated: \"right\",\n        size: \"mini\",\n        list: \"environment\",\n        placeholder: \"Environment...\",\n        name: \"environment\",\n        value: this.state.environment,\n        onChange: this.envHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        compact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Switch environment\"), React.createElement(\"datalist\", {\n        id: \"environment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"develop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"production\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"stage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return TopControl;\n}(Component);\n\nexport default TopControl;","map":{"version":3,"sources":["/home/fefe/Develop/mucca-project/mucca_frontend_admin/src/Components/Sections/TopControl.jsx"],"names":["React","Component","Image","Input","Button","Icon","Grid","TopControl","state","environment","envHandler","event","name","target","setState","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Image, Input, Button, Icon, Grid } from \"semantic-ui-react\";\n\nclass TopControl extends Component {\n  state = {\n    environment: \"\"\n  };\n\n  envHandler = event => {\n    let name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"topcontrol\">\n        <Grid columns={2}>\n          <Grid.Row floated=\"right\">\n            <Grid.Column />\n            <Grid.Column floated=\"right\">\n              <Button.Group icon size=\"small\" compact>\n                <Button inverted size=\"small\">\n                  <span className=\"btnlabel\">Start </span>\n                  <Icon name=\"play\" circular color=\"violet\" size=\"small\" />\n                </Button>\n                <span className=\"buttondivider\" />\n                <Button inverted size=\"small\">\n                  <span className=\"btnlabel\">Stop </span>\n\n                  <Icon name=\"pause\" circular color=\"violet\" size=\"small\" />\n                </Button>\n              </Button.Group>\n              <Input\n                floated=\"right\"\n                size=\"mini\"\n                list=\"environment\"\n                placeholder=\"Environment...\"\n                name=\"environment\"\n                value={this.state.environment}\n                onChange={this.envHandler}\n              />\n              <Button type=\"submit\" compact>\n                Switch environment\n              </Button>\n              <datalist id=\"environment\">\n                <option value=\"develop\" />\n                <option value=\"production\" />\n                <option value=\"stage\" />\n              </datalist>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default TopControl;\n"]},"metadata":{},"sourceType":"module"}